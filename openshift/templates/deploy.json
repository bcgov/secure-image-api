{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "annotations": {
      "description": "Deployment template for a nodejs server.",
      "tags": "node",
      "iconClass": "icon-node"
    }
  },
  "objects": [{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [{
          "name": "8080-tcp",
          "port": 8080,
          "targetPort": 8080
        }],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "port": {
          "targetPort": "8080-tcp"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}",
          "weight": 100
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [{
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "volumes": [{
              "name": "${NAME}-data",
              "persistentVolumeClaim": {
                "claimName": "${NAME}"
              }
            }],
            "containers": [{
              "name": "${NAME}",
              "image": " ",
              "ports": [{
                "containerPort": 8080,
                "protocol": "TCP"
              }],
              "readinessProbe": {
                "timeoutSeconds": 3,
                "initialDelaySeconds": 3,
                "httpGet": {
                  "path": "/ehlo",
                  "port": 8080
                }
              },
              "livenessProbe": {
                "timeoutSeconds": 3,
                "initialDelaySeconds": 300,
                "httpGet": {
                  "path": "/ehlo",
                  "port": 8080
                }
              },
              "env": [{
                  "name": "MINIO_ACCESS_KEY",
                  "value": "${MINIO_ACCESS_KEY}"
                },
                {
                  "name": "MINIO_SECRET_KEY",
                  "value": "${MINIO_SECRET_KEY}"
                },
                {
                  "name": "PORT",
                  "value": "${PORT}"
                },
                {
                  "name": "NODE_ENV",
                  "value": "${NODE_ENV}"
                },
                
                {
                  "name": "APPLICATION_IP",
                  "value": "${APPLICATION_IP}"
                },
                {
                  "name": "APPLICATION_PORT",
                  "value": "${APPLICATION_PORT}"
                },
                {
                  "name": "THE_ORG_BOOK_BASE_URL",
                  "value": "${THE_ORG_BOOK_BASE_URL}"
                }
              ],
              "resources": {
                "limits": {
                  "memory": "${MEMORY_LIMIT}"
                }
              }
            }]
          }
        }
      }
    },
    {
      "apiVersion": "extensions/v1beta1",
      "kind": "HorizontalPodAutoscaler",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${NAME}"
        }
      },
      "spec": {
        "scaleRef": {
          "kind": "DeploymentConfig",
          "name": "${NAME}",
          "apiVersion": "extensions/v1beta1",
          "subresource": "scale"
        },
        "minReplicas": 1,
        "maxReplicas": 1
      }
    }
  ],
  "parameters": [{
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
      "required": true,
      "value": "bc-registries"
    },
    {
      "name": "SOURCE_IMAGE_NAME",
      "displayName": "Source Image Name",
      "description": "The name of the image to use for this resource.",
      "required": true,
      "value": "permitify"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "devex-von-permitify-tools"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the container can use.",
      "value": "512Mi"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "APP_CONFIG",
      "displayName": "Application Configuration File Path",
      "description": "Relative path to Gunicorn configuration file (optional)."
    },
    {
      "name": "DJANGO_SECRET_KEY",
      "displayName": "Django Secret Key",
      "description": "Set this to a long random string.",
      "generate": "expression",
      "from": "[\\w]{50}"
    },
    {
      "name": "DJANGO_DEBUG",
      "displayName": "Django Debug",
      "description": "If Django is in debug mode",
      "required": true,
      "value": "False"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "value": "dev",
      "required": true
    },
    {
      "name": "TEMPLATE_NAME",
      "displayName": "Template Name",
      "description": "The name of the site template to use for the application instance.",
      "required": true,
      "value": "bc_registries"
    },
    {
      "name": "APPLICATION_IP",
      "displayName": "Application IP",
      "description": "The internal IP address to use when hosting the application instance.",
      "required": true,
      "value": "0.0.0.0"
    },
    {
      "name": "APPLICATION_PORT",
      "displayName": "Application Port",
      "description": "The internal port to use when hosting the application instance.",
      "required": true,
      "value": "8080"
    },
    {
      "name": "THE_ORG_BOOK_BASE_URL",
      "displayName": "TheOrgBook API Base URL",
      "description": "The base URL for TheOrgBook's API.",
      "required": true,
      "value": "https://django-devex-von-dev.pathfinder.gov.bc.ca/api/v1"
    }
  ]
}